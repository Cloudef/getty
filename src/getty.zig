//! A (de)serialization framework for the Zig programming language.

const s = @import("ser/ser.zig");
const d = @import("de/de.zig");

////////////////////////////////////////////////////////////////////////////////
// Types
////////////////////////////////////////////////////////////////////////////////

pub const Serializer = s.Serializer;
pub const Deserializer = d.Deserializer;

////////////////////////////////////////////////////////////////////////////////
// Namespaces
////////////////////////////////////////////////////////////////////////////////

pub const ser = s.ser;
pub const de = d.de;

////////////////////////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////////////////////////

/// Serializes a value into a `getty.Serializer`.
pub const serialize = s.serialize;

/// Deserializes into a value of type `T` from a `getty.Deserializer`.
pub const deserialize = d.deserialize;

////////////////////////////////////////////////////////////////////////////////
// Values
////////////////////////////////////////////////////////////////////////////////

/// The default serialization tuple used by Getty.
pub const default_st = s.default_st;

/// The default deserialization tuple used by Getty.
pub const default_dt = d.default_dt;

////////////////////////////////////////////////////////////////////////////////
// Miscellaneous
////////////////////////////////////////////////////////////////////////////////

pub usingnamespace @import("attributes.zig");
